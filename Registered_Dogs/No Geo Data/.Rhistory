ifelse(bcView$date=="2016-05-20", "BtWD\n2016","")))
bcView$day <- factor(bcView$day, levels = c("BTWD\n2015", "May 2016\nWeekday Avg", "BTWD\n2016"))
bcView$Var1<-as.character(bcView$Var1)
colnames(bcView)
bcView<-subset(bcView,bcView$name!="W&OD Bon Air Park")
bcView$loc<-ifelse(bcView$name=="15th Street NW", "15th + N St NW\n(DC)",
ifelse(bcView$name=="CC Connector", "Mt Vernon Trail +\nGW Parkway(VA)",
ifelse(bcView$name=="Custis Rosslyn", "Custis + 20th St N\n(VA)",
ifelse(bcView$name=="Rosslyn Bikeometer","Custis + N Lynn St\n(VA)",
ifelse(bcView$name=="Key Bridge", "Key Bridge\n(VA)",
ifelse(bcView$name=="Metropolitan Branch Trail North", "Met Branch Trail,\nNorth (DC)",
ifelse(bcView$name=="TR Island Bridge", "TR Island Bridge,\n(VA)",
ifelse(bcView$name=="W&OD Bon Air West", "W&OD Bon Air West,\n(VA)",
ifelse(bcView$name=="W&OD Columbia Pike", "W&OD Columbia Pike,\n(VA)",
as.character(bcView$name))))))))))
col<-c("#F8AFA8", "#FDDDA0", "#74A089")
ggplot(data=bcView, aes(x=day,y=x, y)) +
geom_bar(stat="identity",aes(fill=factor(day))) +
scale_fill_manual(values = col)+
facet_wrap(~loc) +
theme(axis.text.x = element_text()) +
theme(plot.background = element_rect(fill = '#EFF0F1'))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(text = element_text(size=20)) +
theme(legend.position="none") +
theme(axis.title.y = element_text(color="#505050")) +
scale_x_discrete(name="") +
labs(x="Date", y="Number of bikes counted", title="")
table(bcView$date)
table(bcView$day)
str(bcView)
bcView$day<-ifelse(bcView$date=="2015-05-15", "BtWD\n2015",
ifelse(bcView$date=="2016-05-15", "May 2016\nWeekday Avg",
ifelse(bcView$date=="2016-05-20", "BtWD\n2016","")))
View(bcView)
table(bcView$day)
ggplot(data=bcView, aes(x=day,y=x, y)) +
geom_bar(stat="identity",aes(fill=factor(day))) +
scale_fill_manual(values = col)+
facet_wrap(~loc) +
theme(axis.text.x = element_text()) +
theme(plot.background = element_rect(fill = '#EFF0F1'))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(text = element_text(size=20)) +
theme(legend.position="none") +
theme(axis.title.y = element_text(color="#505050")) +
scale_x_discrete(name="") +
labs(x="Date", y="Number of bikes counted", title="")
bcView$day<-ifelse(bcView$date=="2015-05-15", "BtWD\n2015",
ifelse(bcView$date=="2016-05-15", "May 2016\nWeekday Avg",
ifelse(bcView$date=="2016-05-20", "BtWD\n2016","")))
ggplot(data=bcView, aes(x=day,y=x, y)) +
geom_bar(stat="identity",aes(fill=factor(day))) +
scale_fill_manual(values = col)+
facet_wrap(~loc) +
theme(axis.text.x = element_text()) +
theme(plot.background = element_rect(fill = '#EFF0F1'))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(text = element_text(size=20)) +
theme(legend.position="none") +
theme(axis.title.y = element_text(color="#505050")) +
scale_x_discrete(name="") +
labs(x="Date", y="Number of bikes counted", title="")
bcView<-rbind(btwd,WkdAvg)
bcView<-bcView[order(bcView[,1],bcView[,2]),]
bcView$day<-ifelse(bcView$date=="2015-05-15", "BtWD\n2015",
ifelse(bcView$date=="2016-05-15", "May 2016\nWeekday Avg",
ifelse(bcView$date=="2016-05-20", "BtWD\n2016","")))
bcView$day <- factor(bcView$day, levels = c("BTWD\n2015", "May 2016\nWeekday Avg", "BTWD\n2016"))
bcView<-subset(bcView,bcView$name!="W&OD Bon Air Park")
bcView$loc<-ifelse(bcView$name=="15th Street NW", "15th + N St NW\n(DC)",
ifelse(bcView$name=="CC Connector", "Mt Vernon Trail +\nGW Parkway(VA)",
ifelse(bcView$name=="Custis Rosslyn", "Custis + 20th St N\n(VA)",
ifelse(bcView$name=="Rosslyn Bikeometer","Custis + N Lynn St\n(VA)",
ifelse(bcView$name=="Key Bridge", "Key Bridge\n(VA)",
ifelse(bcView$name=="Metropolitan Branch Trail North", "Met Branch Trail,\nNorth (DC)",
ifelse(bcView$name=="TR Island Bridge", "TR Island Bridge,\n(VA)",
ifelse(bcView$name=="W&OD Bon Air West", "W&OD Bon Air West,\n(VA)",
ifelse(bcView$name=="W&OD Columbia Pike", "W&OD Columbia Pike,\n(VA)",
as.character(bcView$name))))))))))
col<-c("#F8AFA8", "#FDDDA0", "#74A089")
ggplot(data=bcView, aes(x=day,y=x, y)) +
geom_bar(stat="identity",aes(fill=factor(day))) +
scale_fill_manual(values = col)+
facet_wrap(~loc) +
theme(axis.text.x = element_text()) +
theme(plot.background = element_rect(fill = '#EFF0F1'))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(text = element_text(size=20)) +
theme(legend.position="none") +
theme(axis.title.y = element_text(color="#505050")) +
scale_x_discrete(name="") +
labs(x="Date", y="Number of bikes counted", title="")
bcView$day<-ifelse(bcView$date=="2015-05-15", "BtWD\n2015",
ifelse(bcView$date=="2016-05-15", "May 2016\nWeekday Avg",
ifelse(bcView$date=="2016-05-20", "BtWD\n2016","")))
bcView$day<-ifelse(bcView$date=="2015-05-15", "BTWD\n2015",
ifelse(bcView$date=="2016-05-15", "May 2016\nWeekday Avg",
ifelse(bcView$date=="2016-05-20", "BTWD\n2016","")))
bcView$day <- factor(bcView$day, levels = c("BTWD\n2015", "May 2016\nWeekday Avg", "BTWD\n2016"))
ggplot(data=bcView, aes(x=day,y=x, y)) +
geom_bar(stat="identity",aes(fill=factor(day))) +
scale_fill_manual(values = col)+
facet_wrap(~loc) +
theme(axis.text.x = element_text()) +
theme(plot.background = element_rect(fill = '#EFF0F1'))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(text = element_text(size=20)) +
theme(legend.position="none") +
theme(axis.title.y = element_text(color="#505050")) +
scale_x_discrete(name="") +
labs(x="Date", y="Number of bikes counted", title="")
ggplot(data=bcView, aes(x=day,y=x, y)) +
geom_bar(stat="identity",aes(fill=factor(day))) +
scale_fill_manual(values = col)+
facet_wrap(~loc) +
theme(axis.text.x = element_text()) +
theme(plot.background = element_rect(fill = '#EFF0F1'))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(text = element_text(size=16)) +
theme(legend.position="none") +
theme(axis.title.y = element_text(color="#505050")) +
scale_x_discrete(name="") +
labs(x="Date", y="Number of bikes counted", title="")
bcView$x<-ifelse(bcView$loc=="Met Branch Trail,\nNorth (DC)" & bcView$Day== "BTWD\n2015",
1180,bcView$x)
colnames(bcView)
bcView$x<-ifelse(bcView$loc=="Met Branch Trail,\nNorth (DC)" & bcView$day== "BTWD\n2015",
1180,bcView$x)
ggplot(data=bcView, aes(x=day,y=x, y)) +
geom_bar(stat="identity",aes(fill=factor(day))) +
scale_fill_manual(values = col)+
facet_wrap(~loc) +
theme(axis.text.x = element_text()) +
theme(plot.background = element_rect(fill = '#EFF0F1'))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(text = element_text(size=16)) +
theme(legend.position="none") +
theme(axis.title.y = element_text(color="#505050")) +
scale_x_discrete(name="") +
labs(x="Date", y="Number of bikes counted", title="")
bcView$day<-ifelse(bcView$date=="2015-05-15", "BTWD\n2015",
ifelse(bcView$date=="2016-05-15", "May 2016\nWeekday Avg",
ifelse(bcView$date=="2016-05-20", "BTWD\n2016","")))
ggplot(data=bcView, aes(x=day,y=x, y)) +
geom_bar(stat="identity",aes(fill=factor(day))) +
scale_fill_manual(values = col)+
facet_wrap(~loc) +
theme(axis.text.x = element_text()) +
theme(plot.background = element_rect(fill = '#EFF0F1'))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(text = element_text(size=16)) +
theme(legend.position="none") +
theme(axis.title.y = element_text(color="#505050")) +
scale_x_discrete(name="") +
labs(x="Date", y="Number of bikes counted", title="")
bcView$day<-ifelse(bcView$date=="2015-05-15", "BTWD\n2015",
ifelse(bcView$date=="2016-05-15", "May 2016\nM-F Avg",
ifelse(bcView$date=="2016-05-20", "BTWD\n2016","")))
bcView$day <- factor(bcView$day, levels = c("BTWD\n2015", "May 2016\nM-F Avg", "BTWD\n2016"))
ggplot(data=bcView, aes(x=day,y=x, y)) +
geom_bar(stat="identity",aes(fill=factor(day))) +
scale_fill_manual(values = col)+
facet_wrap(~loc) +
theme(axis.text.x = element_text()) +
theme(plot.background = element_rect(fill = '#EFF0F1'))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(text = element_text(size=16)) +
theme(legend.position="none") +
theme(axis.title.y = element_text(color="#505050")) +
scale_x_discrete(name="") +
labs(x="Date", y="Number of bikes counted", title="")
bcView<-rbind(btwd,WkdAvg)
str(bcView)
bcView<-bcView[order(bcView[,1],bcView[,2]),]
bcView$day<-ifelse(bcView$date=="2015-05-15", "BTWD\n2015",
ifelse(bcView$date=="2016-05-15", "May 2016\nweekday avg",
ifelse(bcView$date=="2016-05-20", "BTWD\n2016","")))
bcView$day <- factor(bcView$day, levels = c("BTWD\n2015", "May 2016\weekday avg", "BTWD\n2016"))
bcView<-subset(bcView,bcView$name!="W&OD Bon Air Park")
bcView$loc<-ifelse(bcView$name=="15th Street NW", "15th + N St NW\n(DC)",
ifelse(bcView$name=="CC Connector", "Mt Vernon Trail +\nGW Parkway(VA)",
ifelse(bcView$name=="Custis Rosslyn", "Custis + 20th St N\n(VA)",
ifelse(bcView$name=="Rosslyn Bikeometer","Custis + N Lynn St\n(VA)",
ifelse(bcView$name=="Key Bridge", "Key Bridge\n(VA)",
ifelse(bcView$name=="Metropolitan Branch Trail North", "Met Branch Trail,\nNorth (DC)",
ifelse(bcView$name=="TR Island Bridge", "TR Island Bridge,\n(VA)",
ifelse(bcView$name=="W&OD Bon Air West", "W&OD Bon Air West,\n(VA)",
ifelse(bcView$name=="W&OD Columbia Pike", "W&OD Columbia Pike,\n(VA)",
as.character(bcView$name))))))))))
bcView$x<-ifelse(bcView$loc=="Met Branch Trail,\nNorth (DC)" & bcView$day== "BTWD\n2015",
1180,bcView$x)
col<-c("#F8AFA8", "#FDDDA0", "#74A089")
ggplot(data=bcView, aes(x=day,y=x, y)) +
geom_bar(stat="identity",aes(fill=factor(day))) +
scale_fill_manual(values = col)+
facet_wrap(~loc) +
theme(axis.text.x = element_text()) +
theme(plot.background = element_rect(fill = '#EFF0F1'))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(text = element_text(size=16)) +
theme(legend.position="none") +
theme(axis.title.y = element_text(color="#505050")) +
scale_x_discrete(name="") +
labs(x="Date", y="Number of bikes counted", title="")
bcView<-rbind(btwd,WkdAvg)
str(bcView)
bcView<-bcView[order(bcView[,1],bcView[,2]),]
bcView$day<-ifelse(bcView$date=="2015-05-15", "BTWD\n2015",
ifelse(bcView$date=="2016-05-15", "May 2016\nweekday avg",
ifelse(bcView$date=="2016-05-20", "BTWD\n2016","")))
bcView$day <- factor(bcView$day, levels = c("BTWD\n2015", "May 2016\nweekday avg", "BTWD\n2016"))
bcView<-subset(bcView,bcView$name!="W&OD Bon Air Park")
bcView$loc<-ifelse(bcView$name=="15th Street NW", "15th + N St NW\n(DC)",
ifelse(bcView$name=="CC Connector", "Mt Vernon Trail +\nGW Parkway(VA)",
ifelse(bcView$name=="Custis Rosslyn", "Custis + 20th St N\n(VA)",
ifelse(bcView$name=="Rosslyn Bikeometer","Custis + N Lynn St\n(VA)",
ifelse(bcView$name=="Key Bridge", "Key Bridge\n(VA)",
ifelse(bcView$name=="Metropolitan Branch Trail North", "Met Branch Trail,\nNorth (DC)",
ifelse(bcView$name=="TR Island Bridge", "TR Island Bridge,\n(VA)",
ifelse(bcView$name=="W&OD Bon Air West", "W&OD Bon Air West,\n(VA)",
ifelse(bcView$name=="W&OD Columbia Pike", "W&OD Columbia Pike,\n(VA)",
as.character(bcView$name))))))))))
###correct Met Branch 2015 BTWD to DDOT report
bcView$x<-ifelse(bcView$loc=="Met Branch Trail,\nNorth (DC)" & bcView$day== "BTWD\n2015",
1180,bcView$x)
col<-c("#F8AFA8", "#FDDDA0", "#74A089")
ggplot(data=bcView, aes(x=day,y=x, y)) +
geom_bar(stat="identity",aes(fill=factor(day))) +
scale_fill_manual(values = col)+
facet_wrap(~loc) +
theme(axis.text.x = element_text()) +
theme(plot.background = element_rect(fill = '#EFF0F1'))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(text = element_text(size=16)) +
theme(legend.position="none") +
theme(axis.title.y = element_text(color="#505050")) +
scale_x_discrete(name="") +
labs(x="Date", y="Number of bikes counted", title="")
ggplot(data=bcView, aes(x=day,y=x, y)) +
geom_bar(stat="identity",aes(fill=factor(day))) +
scale_fill_manual(values = col)+
facet_wrap(~loc) +
theme(axis.text.x = element_text()) +
theme(plot.background = element_rect(fill = '#EFF0F1'))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(text = element_text(size=15)) +
theme(legend.position="none") +
theme(axis.title.y = element_text(color="#505050")) +
scale_x_discrete(name="") +
labs(x="Date", y="Number of bikes counted", title="")
ggplot(data=bcView, aes(x=day,y=x, y)) +
geom_bar(stat="identity",aes(fill=factor(day))) +
scale_fill_manual(values = col)+
facet_wrap(~loc) +
theme(axis.text.x = element_text()) +
theme(plot.background = element_rect(fill = '#EFF0F1'))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(text = element_text(size=16)) +
theme(legend.position="none") +
theme(axis.title.y = element_text(color="#505050")) +
scale_x_discrete(name="") +
labs(x="Date", y="Number of bikes counted", title="")
bcH<-merge(bcHour,loc,by="counter")
bcH$name<-ifelse(grepl("Key Bridge",bcH$name),"Key Bridge",bcH$name)
bcHSub<-subset(bcH,bcH$name %in% bcView$Var1)
hourSum<-aggregate(bcHSub$bikeCount, by=list(name=bcHSub$name,hour=bcHSub$hour), FUN=sum)
nameMatch=bcView[c(1,5)]
bcH<-merge(bcHour,loc,by="counter")
bcH$name<-ifelse(grepl("Key Bridge",bcH$name),"Key Bridge",bcH$name)
bcHSub<-subset(bcH,bcH$name %in% bcView$name)
hourSum<-aggregate(bcHSub$bikeCount, by=list(name=bcHSub$name,hour=bcHSub$hour), FUN=sum)
nameMatch=bcView[c(1,5)]
nameMatch<-nameMatch[!duplicated(nameMatch[,c('Var1')]),]
hourGraph<-merge(x=hourSum,y=nameMatch,"name")
bcH<-merge(bcHour,loc,by="counter")
bcH$name<-ifelse(grepl("Key Bridge",bcH$name),"Key Bridge",bcH$name)
bcHSub<-subset(bcH,bcH$name %in% bcView$name)
hourSum<-aggregate(bcHSub$bikeCount, by=list(name=bcHSub$name,hour=bcHSub$hour), FUN=sum)
nameMatch=bcView[c(1,5)]
nameMatch<-nameMatch[!duplicated(nameMatch[,c('name')]),]
hourGraph<-merge(x=hourSum,y=nameMatch,"name")
hourGraph$hour12<-ifelse(hourGraph$hour==0, "12a",
ifelse(hourGraph$hour==12, "12p",
ifelse(hourGraph$hour<12, paste0(hourGraph$hour,"a"),
paste0((hourGraph$hour-12),"p"))))
hourGraph$hour12<-factor(hourGraph$hour12,
levels=c("12a","1a","2a","3a","4a","5a","6a","7a","8a","9a","10a","11a",
"12p","1p","2p","3p","4p","5p","6p","7p","8p","9p","10p","11p"))
str(hourGraph)
ggplot(data=hourGraph, aes(x=hour12,y=x)) +
geom_bar(stat="identity", fill="#46ACC8") +
facet_wrap(~loc) +
theme(plot.background = element_rect(fill = '#EFF0F1'))+
theme(axis.text.x = element_text()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(legend.position="none") +
theme(text = element_text(size=20)) +
theme(axis.title.y = element_text(color="#505050")) +
scale_x_discrete(breaks=c("3a","6a","9a","12p","3p","6p","9p"),name="") +
labs(x="Hour", y="Number of bikes counted", title="")
ggplot(data=hourGraph, aes(x=hour12,y=x)) +
geom_bar(stat="identity", fill="#46ACC8") +
facet_wrap(~loc) +
theme(plot.background = element_rect(fill = '#EFF0F1'))+
theme(axis.text.x = element_text()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(legend.position="none") +
theme(text = element_text(size=16)) +
theme(axis.title.y = element_text(color="#505050")) +
scale_x_discrete(breaks=c("3a","6a","9a","12p","3p","6p","9p"),name="") +
labs(x="Hour", y="Number of bikes counted", title="")
View(loc)
View(bcView)
1559/575
3059/744
1313/482
2617/1030
3282/993
3059/745
library(nnet)
library(caret)
Spam_Train <- read.csv(file="/Users/katerabinowitz/Documents/StanfordGrad/STATS315B/HW2/Spam_Train.txt",head=FALSE,sep=",")
Spam_Test <- read.csv(file="/Users/katerabinowitz/Documents/StanfordGrad/STATS315B/HW2/Spam_Test.txt",head=FALSE,sep=",")
Spam_Test <- read.csv(file="/Users/katerabinowitz/Documents/StanfordGrad/STATS315B/HW2/Spam.Test.txt",head=FALSE,sep=",")
snames <- c("word_freq_make","word_freq_address",
"word_freq_all","word_freq_3d","word_freq_our","word_freq_over",
"word_freq_remove","word_freq_internet","word_freq_order",
"word_freq_mail","word_freq_receive","word_freq_will",
"word_freq_people","word_freq_report","word_freq_addresses",
"word_freq_free","word_freq_business","word_freq_email",
"word_freq_you","word_freq_credit","word_freq_your",
"word_freq_font","word_freq_000","word_freq_money",
"word_freq_hp","word_freq_hpl","word_freq_george",
"word_freq_650","word_freq_lab","word_freq_labs",
"word_freq_telnet","word_freq_857","word_freq_data",
"word_freq_415","word_freq_85","word_freq_technology",
"word_freq_1999","word_freq_parts","word_freq_pm",
"word_freq_direct","word_freq_cs","word_freq_meeting",
"word_freq_original","word_freq_project","word_freq_re",
"word_freq_edu","word_freq_table","word_freq_conference",
"char_freq_;","char_freq_(","char_freq_[","char_freq_!",
"char_freq_$","char_freq_#","capital_run_length_average",
"capital_run_length_longest","capital_run_length_total","spam")
colnames(Spam_Data) <- snames
colnames(Spam_Train) <- snames
colnames(Spam_Test) <- snames
Spam_Train[, 1:57] <- scale(Spam_Train[, 1:57])
Spam_Test[, 1:57] <- scale(Spam_Test[, 1:57])
Spam_Train[, 1:57] <- scale(Spam_Train[, 1:57])
Spam_Test[, 1:57] <- scale(Spam_Test[, 1:57])
set.seed(100)
for (n in 1:10) {
ntrain <- nnet(factor(spam) ~ ., data = Spam_Train, size = n, maxit = 5000,
rang = 0.5, trace = F)
predn <- predict(ntrain, newdata = Spam_Test[, 1:57], type = "class")
s <- sum((predn != Spam_Test$spam))/nrow(Spam_Test)
cat(n," ", s,"\n")
}
set.seed(100)
for (n in seq(0, 1, 0.1)) {
ntrain1 <- nnet(factor(spam) ~ ., data = Spam_Train, size = 6, maxit = 5000,
rang = 0.5, decay = n, trace = F)
predn1 <- predict(ntrain1, newdata = Spam_Test[, 1:57], type = "class")
s1 <- sum((predn1 != Spam_Test$spam))/nrow(Spam_Test)
cat(n," ", s1,"\n")
}
for (n in seq(0, 1, 0.1)) {
NN.train <- nnet(factor(SPAM) ~ ., data = spam.train, size = 6, maxit = 5000,
rang = 0.5, decay = n, trace = F)
threshold = 0.8
cat("False Negative rate for model trained with", NN.train$n[2], "hidden units and a decay factor of",
n, "and a threshold of", threshold, ":", sum(spam.test$SPAM < (predict(NN.train,
newdata = spam.test[, 1:57], type = "raw") > threshold))/nrow(spam.test),
"\n")
}
for (n in seq(0, 1, 0.1)) {
NN.train <- nnet(factor(SPAM) ~ ., data = spam_train, size = 6, maxit = 5000,
rang = 0.5, decay = n, trace = F)
threshold = 0.8
cat("False Negative rate for model trained with", NN.train$n[2], "hidden units and a decay factor of",
n, "and a threshold of", threshold, ":", sum(spam.test$SPAM < (predict(NN.train,
newdata = spam.test[, 1:57], type = "raw") > threshold))/nrow(spam.test),
"\n")
}
for (n in seq(0, 1, 0.1)) {
NN.train <- nnet(factor(SPAM) ~ ., data = Spam_Train, size = 6, maxit = 5000,
rang = 0.5, decay = n, trace = F)
threshold = 0.8
cat("False Negative rate for model trained with", NN.train$n[2], "hidden units and a decay factor of",
n, "and a threshold of", threshold, ":", sum(Spam_Test$SPAM < (predict(NN.train,
newdata = spam.test[, 1:57], type = "raw") > threshold))/nrow(spam.test),
"\n")
}
for (n in seq(0, 1, 0.1)) {
NN.train <- nnet(factor(spam) ~ ., data = Spam_Train, size = 6, maxit = 5000,
rang = 0.5, decay = n, trace = F)
threshold = 0.8
cat("False Negative rate for model trained with", NN.train$n[2], "hidden units and a decay factor of",
n, "and a threshold of", threshold, ":", sum(Spam_Test$SPAM < (predict(NN.train,
newdata = spam.test[, 1:57], type = "raw") > threshold))/nrow(spam.test),
"\n")
}
for (n in seq(0, 1, 0.1)) {
NN.train <- nnet(factor(spam) ~ ., data = Spam_Train, size = 6, maxit = 5000,
rang = 0.5, decay = n, trace = F)
threshold = 0.8
cat("False Negative rate for model trained with", NN.train$n[2], "hidden units and a decay factor of",
n, "and a threshold of", threshold, ":", sum(Spam_Test$SPAM < (predict(NN.train,
newdata = Spam_Test[, 1:57], type = "raw") > threshold))/nrow(Spam_Test),
"\n")
}
set.seed(100)
for (u in seq(1:10)) { # hidden units
for (r in seq(.5, .9, 0.1)) { # threshold
for (n in seq(0, 1, 0.1)) { # decay
ntrain2 <- nnet(factor(spam) ~ ., data = Spam_Train, size = u, maxit = 5000,
rang = 0.5, decay = n, trace = F)
predn2 <- predict(ntrain2, newdata = Spam_Test[, 1:57])
predn2a <- ifelse(predn2<r,0,1)
t2 <- table(Spam_Test$spam,predn2a)
cat(u," ",r," ",n," ", round(t2[1,2]/(t2[1,1]+t2[1,2])*100,2),"\n")
}
}
}
library(rgdal)
crash = readOGR("http://opendata.dc.gov/datasets/95254fae17bc4792bd47b53f71c2e503_19.geojson", "OGRGeoJSON")
vehCrash<-data.frame(crash@data)
str(vehCrash)
fatal<-subset(crash,crash$NUMPEDFATALITY>0)
fatal<-subset(vehCrash,vehCrash$NUMPEDFATALITY>0)
table(vehCrash$NUMPEDFATALITY)
fatal<-subset(vehCrash,vehCrash$NUMFATALITIES>0)
table(vehCrash$NUMFATALITIES)
write.csv(fatal,"/Users/katerabinowitz/Documents/DataLensDC Org/Crash/fatal.csv")
Enrollment
resCAMA = readOGR("http://opendata.dc.gov/datasets/c5fb3fbe4c694a59a6eef7bf5f8bc49a_25.geojson", "OGRGeoJSON")
library(rgdal)
resCAMA = readOGR("http://opendata.dc.gov/datasets/c5fb3fbe4c694a59a6eef7bf5f8bc49a_25.geojson", "OGRGeoJSON")
res<-data.frame(resCAMA@data)
str(res)
table(resCAMA$NUM_UNITS)
R.Version()
request1 <- read.csv("/Users/katerabinowitz/Documents/DataLensDC Org/Taxi/Rabinowitz FOIA Request.csv",
nrows=10)
request1 <- read.csv("/Users/katerabinowitz/Documents/DataLensDC Org/Taxi/Rabinowitz FOIA Request.csv",
nrows=10)
colnames(request1)
library(data.table)
install.packages("data.table")
library(data.table)
colClass1=(rep("NULL",3),rep("factor",2),rep("NULL",9),rep("factor",2),rep("NULL",2))
colClass1=c(rep("NULL",3),rep("factor",2),rep("NULL",9),rep("factor",2),rep("NULL",2))
request1 <- fread("/Users/katerabinowitz/Documents/DataLensDC Org/Taxi/Rabinowitz FOIA Request.csv",
sep=",",colClasses=colClass1,stringsAsFactors=FALSE)
str(request1)
dim(request1)
summary(request1)
request1top <- read.csv("/Users/katerabinowitz/Documents/DataLensDC Org/Taxi/Rabinowitz FOIA Request.csv",
sep=",",nrow=10,stringsAsFactors=FALSE)
str(request1top)
colnames(request1top)
colClass1=c("NULL","factor","NULL",rep("factor",2),rep("NULL",9),rep("factor",2),rep("NULL",2))
request1 <- fread("/Users/katerabinowitz/Documents/DataLensDC Org/Taxi/Rabinowitz FOIA Request.csv",
sep=",",colClasses=colClass1,stringsAsFactors=FALSE)
rm(request1top)
colClass=rep("factor",25)
rm(request1top)
))
library(rgdal)
bb=readOGR("http://opendata.dc.gov/datasets/4c4d6b4defdf4561b737a594b6f2b0dd_23.geojson"."OGRGeoJSON")
bb=readOGR("http://opendata.dc.gov/datasets/4c4d6b4defdf4561b737a594b6f2b0dd_23.geojson","OGRGeoJSON")
table(bb@data$LICENSECATEGORY)
clinic = readOGR("http://opendata.dc.gov/datasets/018890d7399245759f05c7932261ef44_7.geojson",
"OGRGeoJSON")
clinicJSON = readOGR("http://opendata.dc.gov/datasets/018890d7399245759f05c7932261ef44_7.geojson",
"OGRGeoJSON")
clinicGeo = readOGR("http://opendata.dc.gov/datasets/018890d7399245759f05c7932261ef44_7.geojson",
"OGRGeoJSON")
clinic<-clinicGeo@data
str(clinic)
colnames(clinic)
table(clinic$PrimaryCarePtWALKIN_UNSCHEDULED)
walkIn<-subset(clinic, clinic$PrimaryCarePtWALKIN_UNSCHEDULED=="Yes")
View(walkIn)
table(PRIMARY_CARE_INFOLIMITED_ACCESS)
table(clinic$PRIMARY_CARE_INFOLIMITED_ACCESS)
walkIn<-subset(clinic, clinic$PrimaryCarePtWALKIN_UNSCHEDULED=="Yes" &
clinic$PRIMARY_CARE_INFOLIMITED_ACCESS=="")
walkIn<-subset(clinic, clinic$PrimaryCarePtWALKIN_UNSCHEDULED=="Yes" &
clinic$PRIMARY_CARE_INFOLIMITED_ACCESS==" ")
View(walkIn)
setwd("/Users/katerabinowitz/Documents/DataLensDC/FOIA-Requests/Registered Dogs/No Geo Data")
files = list.files(pattern="*.csv")
data = do.call(rbind, lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE,fill = FALSE,
strip.white = TRUE,header=F) [c(1,4:5,7,10,12,14,17,19)]))
r <- 1:nrow(data)
data0<-data[r%%3==0,-c(2,7)]
colnames(data0)<-c("animalN","name","DOB","species","breed","color","gender")
data1<-data[r%%3==1,-c(5,7,9)]
colnames(data1)<-c("licenseN","licenseStatus","statusDT","licenseType","licenseIssuer","licenseCost")
data2<-data[r%%3==2,-c(2,5)]
colnames(data2)<-c("licenseLength","expireD","renewal","rabiesVac","vacDate","reVacD","provider")
rightData<-cbind(data0,data1,data2)
View(rightData)
write.csv(rightData,"licensedDogs.csv")
unq<-rightData[!duplicated(rightData$animalN),]
name<-as.data.frame(table(unq$name))
name<-name[order(-name$Freq),]
breed<-as.data.frame(table(unq$breed))
breed<-breed[order(-breed$Freq),]
table(unq$licenseStatus)
